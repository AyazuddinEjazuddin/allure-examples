name: allure-python

on:
  push:
    branches-ignore:
      - 'gh-pages'
    paths:
      - 'allure-python/**'
      - '**/allure-python.yml'

jobs:
  pytest:
    env:
      PYTEST_WORKDIR: ./${{ github.workflow }}/${{ github.workflow }}-pytest
    name: Push to repo allure-python-pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        working-directory: ${{ env.PYTEST_WORKDIR }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check code style
        working-directory: ${{ env.PYTEST_WORKDIR }}
        if: always()
        run: |
          flake8

      - name: Copy needed files
        run: |
          mkdir -p result
          cp -r $PYTEST_WORKDIR/. ./result
          mkdir -p ./result/.github/workflows
          cp ${{ github.workflow }}/.github/workflows/${{ github.workflow }}-pytest.yml ./result/.github/workflows
          ls -l result

      - run: git init
        working-directory: result

      - name: Push
        uses: actions-js/push@master
        with:
          repository: allure-examples/${{ github.workflow }}-pytest
          directory: result
          message: ${{ github.event.head_commit.message }}
          force: true
          github_token: ${{ secrets.QAMETA_TOKEN }}

  behave:
    env:
      BEHAVE_WORKDIR: ./${{ github.workflow }}/${{ github.workflow }}-behave
    name: Push to repo allure-python-behave
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        working-directory: ${{ env.BEHAVE_WORKDIR }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check code style
        working-directory: ${{ env.BEHAVE_WORKDIR }}
        if: always()
        run: |
          flake8

      - name: Copy needed files
        run: |
          mkdir -p result
          cp -r $BEHAVE_WORKDIR/. ./result
          mkdir -p ./result/.github/workflows
          cp ${{ github.workflow }}/.github/workflows/${{ github.workflow }}-behave.yml ./result/.github/workflows
          ls -l result

      - run: git init
        working-directory: result

      - name: Push
        uses: actions-js/push@master
        with:
          repository: allure-examples/${{ github.workflow }}-behave
          directory: result
          message: ${{ github.event.head_commit.message }}
          force: true
          github_token: ${{ secrets.QAMETA_TOKEN }}

  robotframework:
    env:
      ROBOTFRAMEWORK_WORKDIR: ./${{ github.workflow }}/${{ github.workflow }}-robotframework
    name: Push to repo allure-python-robotframework
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        working-directory: ${{ env.ROBOTFRAMEWORK_WORKDIR }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Copy needed files
        run: |
          mkdir -p result
          cp -r $ROBOTFRAMEWORK_WORKDIR/. ./result
          mkdir -p ./result/.github/workflows
          cp ${{ github.workflow }}/.github/workflows/${{ github.workflow }}-robotframework.yml ./result/.github/workflows
          ls -l result

      - run: git init
        working-directory: result

      - name: Push
        uses: actions-js/push@master
        with:
          repository: allure-examples/${{ github.workflow }}-robotframework
          directory: result
          message: ${{ github.event.head_commit.message }}
          force: true
          github_token: ${{ secrets.QAMETA_TOKEN }}
